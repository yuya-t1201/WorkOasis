<div class="container mx-auto py-8">
  <div class="mb-8 flex justify-center">
    <p class="text-black font-semibold"><%= t('workspaces.index.click_to_explore') %></p>
  </div>


  <div class="flex justify-center -mt-4 mb-4">
    <button class="btn btn-xs btn-secondary" onclick="reloadPage()">
        マップをリロードする
    </button>
  </div>


  <div class="mb-4 flex justify-center">
    <input id="searchBox" type="text" placeholder="都市名、住所、施設名、地名で検索" class="input input-bordered w-full input-sm max-w-xs mr-2" />
    <button class="btn btn-sm" onclick="searchLocationAndMove()"><%= t('workspaces.index.search') %></button>
  </div>

 <div class="flex justify-center mb-4">
    <div class="mr-4 flex items-center">
        <div class="w-4 h-4 mr-2" style="background-color: #CD853F;"></div>
        <p class="text-black font-semibold">カフェ</p>
    </div>
    <div class="mr-4 flex items-center">
        <div class="w-4 h-4 mr-2" style="background-color: #00FF00;"></div>
        <p class="text-black font-semibold">図書館</p>
    </div>
    <div class="mr-4 flex items-center">
        <div class="w-4 h-4 mr-2" style="background-color: #00FFFF;"></div>
        <p class="text-black font-semibold">コワーキングスペース</p>
    </div>
    <div class="mr-4 flex items-center">
        <div class="w-4 h-4 mr-2" style="background-color: #FFFF00;"></div>
        <p class="text-black font-semibold">学校</p>
    </div>
    <div class="mr-4 flex items-center">
        <div class="w-4 h-4 mr-2" style="background-color: #A9A9A9;"></div>
        <p class="text-black font-semibold">その他</p>
    </div>
</div>


  <div class="flex justify-center" data-turbolinks="false">
    <div id="map" class="w-full h-screen mb-4"></div>
  </div>
</div>


<style>
  #map {
    height: calc(100vh - 10rem);
  }
</style>

<script>
  let map;
  let infoWindows = [];

  function initMap() {
    const tokyoStation = { lat: 35.681240, lng: 139.766115 };

    map = new google.maps.Map(document.getElementById('map'), {
      center: tokyoStation,
      zoom: 12
    });

    const workspaces = <%= raw @workspaces.to_json %>;

    const spotTypeColors = {
      'cafe': '#CD853F', // カフェ: 明るい茶色
      'library': '#00FF00', // 図書館: 明るい緑色
      'coworking_space': '#00FFFF', // コワーキングスペース: 青色
      'school': '#FFFF00', // 学校: 明るい黄色
      'others': '#A9A9A9' // その他: 明るい灰色
    };

    workspaces.forEach(workspace => {
      const spotTypeColor = spotTypeColors[workspace.spot_type];
      const customIcon = {
        path: google.maps.SymbolPath.BACKWARD_CLOSED_ARROW,
        scale: 5,
        fillColor: spotTypeColor,
        fillOpacity: 1,
        strokeColor: '#000000', // 輪郭線の色は固定で設定
        strokeWeight: 2,
      };

      const marker = new google.maps.Marker({
        position: { lat: parseFloat(workspace.latitude), lng: parseFloat(workspace.longitude) },
        map: map,
        title: workspace.title,
        icon: customIcon,
      });

      const infowindow = new google.maps.InfoWindow({
        content: workspace.title,
      });

      marker.addListener('click', function () {
        if (infowindow.getMap()) {
          infowindow.close();
          map.setCenter(marker.getPosition());
          map.setZoom(12);
        } else {
          // 選択されたマーカー以外の情報ウィンドウを閉じる
          infoWindows.forEach(window => window.close());

          // 詳細ページへのリンクを作成
          const workspaceLink = `<a href="/workspaces/${workspace.id}">${workspace.title}</a>`;
          infowindow.setContent(
            `<div style="color: #333; font-family: Arial, sans-serif; padding: 10px;">
                <h3 style="margin-bottom: 10px; font-size: 20px;">${workspace.title}</h3>
                <p style="margin-bottom: 5px;"><strong>住所:</strong> ${workspace.address}</p>
                <p style="margin-bottom: 5px;"><strong>金額帯:</strong> ${workspace.price}円</p>
                <a href="/workspaces/${workspace.id}" style="text-decoration: none; color: #007BFF;">詳細を見る</a>
              </div>`
          );
          infowindow.open(map, marker);
          map.setCenter(marker.getPosition());
          map.setZoom(15); // 詳細ページへのリンクを表示するためにズームイン
        }
      });

      infoWindows.push(infowindow);
    });
  }

  function searchLocationAndMove() {
    let address = document.getElementById('searchBox').value;
    let geocoder = new google.maps.Geocoder();
    geocoder.geocode({ 'address': address }, function (results, status) {
      if (status == 'OK') {
        map.setCenter(results[0].geometry.location);
        map.setZoom(12);
      } else {
        alert('地域が見つかりませんでした: ' + status);
      }
    });
  }
function reloadPage() {
    location.reload();
  }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAPS_API_KEY'] %>&callback=initMap" async defer></script>


